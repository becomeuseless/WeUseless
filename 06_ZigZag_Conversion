"""
6. ZigZag Conversion
Share
The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"

Write the code that will take a string and make this conversion given a number of rows:

string convert(string s, int numRows);
Example 1:

Input: s = "PAYPALISHIRING", numRows = 3
Output: "PAHNAPLSIIGYIR"
Example 2:

Input: s = "PAYPALISHIRING", numRows = 4
Output: "PINALSIGYAHRPI"
Explanation:

P     I    N
A   L S  I G
Y A   H R
P     I

Time:   O(N)
Space:  O(len(s)^2)
"""

class Solution:
    def convert(self, s: str, numRows: int) -> str:
        if not s or numRows == 1:
            return s

        numCols=((len(s)//(2 * numRows - 2)) + 1) * numRows
        result = []
        [result.append(['']*numCols) for x in range(numRows)]
        idx = 0
        row = 0
        col = 0
        while idx < len(s):
            result[row][col] = s[idx]
            if col % (numRows - 1) == 0 and 0 <= row < numRows - 1:
                row += 1
            else:
                row -= 1
                col += 1
            idx += 1
        strLine = ''.join([''.join(l) for l in result])
        return strLine
    
    
    def convert2(self, s: str, numRows: int) -> str:
        if not s or numRows == 1:
            return s

        numCols=((len(s)//(2 * numRows - 2)) + 1) * numRows
        result = []
        [result.append(['']*numCols) for x in range(numRows)]
        
        def helper(curidx, curcol, currow):
            #end of string
            if curidx >= len(s):
                return
            #cur on the top
            if curcol % (numRows-1) == 0 and 0 <= currow < numRows-1: # fill column
                result[currow][curcol] = s[curidx]
                helper(curidx+1, curcol, currow+1)
            else: #fill diagnal
                result[currow][curcol] = s[curidx]
                helper(curidx+1, curcol+1, currow-1)
        
        helper(0,0,0)        
        
        strLine = ''.join([''.join(l) for l in result])
        return strLine
